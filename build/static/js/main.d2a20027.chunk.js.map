{"version":3,"sources":["pages/Gen4DailyRNG/util/feebasTile.ts","rng/LCG/lcg.ts","pages/Gen4DailyRNG/util/lottery.ts","pages/Gen4DailyRNG/util/outbreak.ts","pages/Gen4DailyRNG/util/findDailySeed.ts","hooks/useIntegerInput.ts","pages/Gen4DailyRNG/DailySeedFinder.tsx","pages/Gen4DailyRNG/DailyRNGList/DailyRNGList.tsx","util/validateSeed.ts","util/toHex.ts","pages/Gen4DailyRNG/DailyRNGList/MtCoronetB1FMap/MapData.ts","pages/Gen4DailyRNG/DailyRNGList/MtCoronetB1FMap/Tile.tsx","pages/Gen4DailyRNG/DailyRNGList/MtCoronetB1FMap/MtCoronetB1F.tsx","components/StyledButton.tsx","pages/Gen4DailyRNG/DailyRNGList/Page.tsx","pages/Gen4DailyRNG/DailyRNGPage.tsx","pages/Gen4InitialSeed/InnerClock/innerClock.ts","pages/Gen4InitialSeed/InitialSeedFactors/detectDateTime.ts","pages/Gen4InitialSeed/CalcDateTimePage.tsx","pages/Top/index.tsx","components/Header.tsx","components/PageContainer.tsx","App.tsx","index.tsx"],"names":["indexMap","generateTileIndexes","dailySeed","val2","val3","val4","Math","imul","opA","opB","result","lcg_next","seed","a","b","LCG","count","getCount","getSeed","getRand","m","advance","advanceLcg","back","backLcg","this","conCache","createCache","Array","i","mulCache","addCache","t","k","advanceDaily","generateLotteryNumber","dpOutbreaks","mapName","pokemon","ptOutbreaks","generateOutbreak","table","length","g_inv","x","filterInput","value","ret","replace","_","String","fromCharCode","charCodeAt","useIntegerInput","defaultValue","React","useState","composing","setComposing","setValue","onChange","useCallback","e","target","onBlur","onCompositionStart","onCompositionEnd","getValue","parseInt","toHex","v","toString","validate","n","Number","isNaN","isFinite","isInteger","DailySeedFinder","toast","useToast","getValue1","prop1","getValue2","prop2","setResult","handleCalc","v1","v2","lottery1","lottery2","lower","push","findDailySeed","description","status","duration","marginBottom","alignItems","marginRight","rounded","w","variant","border","borderColor","onClick","size","map","val","userSelect","navigator","clipboard","writeText","ResultTableRow","memo","bg","lottery","points","handleClick","cursor","ResultTable","selectedRowIndex","onClickRow","validateSeed","input","test","coronetB1FMap","it","split","Tile","children","h","justifyContent","propMap","TileRow","line","feebasIndexes","c","includes","MtCoronetB1F","StyledButton","props","SelectedBox","fontWeight","color","DailyRNGListPage","inputEl","useRef","undefined","version","setVersion","selectedRow","setSelectedRow","selectedPoints","setSelectedPoints","handleSetDp","handleSetPt","current","seedInput","res","handleClickResult","ref","flexWrap","paddingX","DailyRNGPage","tab","setTab","handleSetFinderTab","handleSetListTab","maxW","margin","SEC_PER_DAY","DAYS_PER_LOOP","daysOfMonth","totalDays","getDays","year","month","y","date","days2Date","days","y4","floor","m_temp","d_temp","day","detectDateTime","blank","second","extendsFrame","h8","u24","hour","frame","d_sec","start","frames","minute","backSec","backDays","sec","min","ho","getPrevClock","innerClock","waitFrames","blankFrames","toPadStr","padStart","DateTimeResult","useMemo","time","wait","round","CalcDateTimePage","setSeed","handleChangeSeed","setBlank","handleChangeBlank","valueAsNumber","type","max","as","Button","marginLeft","marginTop","fontSize","Top","to","neon","keyframes","gaming","Header","animation","paddingLeft","PageContainer","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2a20027.chunk.js","sourcesContent":["const indexMap: readonly number[][] = [\n  [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\n    31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61,\n    62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,\n    91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,\n    116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133,\n  ],\n  [\n    134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156,\n    157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180,\n    181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,\n    204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240,\n    241, 249, 250, 251, 252, 253, 256, 257, 258, 259, 267, 268, 269, 270, 271, 274, 275, 276, 277, 285, 286, 287, 288,\n    289, 290, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312,\n  ],\n  [\n    313, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344,\n    345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,\n    370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392,\n    393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 415, 416, 417, 418,\n    419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444,\n    448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464,\n  ],\n  [\n    465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,\n    492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 510, 511, 512, 513, 514, 515, 516, 517,\n    518, 519, 520, 521, 522, 523, 524, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545,\n    546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571,\n    572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594,\n    595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611,\n  ],\n]\n\nexport const indexToPoint = (index: number): [number, number] => [~~(index / 18), index % 18]\nexport const generateTileIndexes = (dailySeed: number): [number, number, number, number] => {\n  const val1 = ((dailySeed >>> 24) & 0xff) % 0x84\n  const val2 = ((dailySeed >>> 16) & 0xff) % 0x84\n  const val3 = ((dailySeed >>> 8) & 0xff) % 0x84\n  const val4 = (dailySeed & 0xff) % 0x84\n  return [indexMap[0][val1], indexMap[1][val2], indexMap[2][val3], indexMap[3][val4]]\n}\n","// imulが定義されていない場合は作っちゃう。\n// https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\nif (!Math.imul) {\n  Math.imul = function (opA, opB) {\n    opB |= 0\n    let result = (opA & 0x003fffff) * opB\n    if (opA & 0xffc00000) result += ((opA & 0xffc00000) * opB) | 0\n    return result | 0\n  }\n}\n\n// @package\nexport const lcg_next: (seed: number, a: number, b: number) => number = (seed, a, b) =>\n  (Math.imul(seed, a) + b) & 0xffffffff\n\ntype LCGConstantCache = {\n  mulCache: number[][]\n  addCache: number[][]\n}\n\nexport const advanceLcg = (seed: number): number => lcg_next(seed, 0x41c64e6d, 0x6073)\nexport const backLcg = (seed: number): number => lcg_next(seed, 0xeeb9eb65, 0xa3561a1)\nexport class LCG {\n  constructor(private seed: number) {\n    this.count = 0\n  }\n\n  private count: number\n  public getCount = () => this.count >>> 0\n  public getSeed = () => this.seed >>> 0\n  public getRand = (m?: number) => (m ? (this.advance() >>> 16) % m : this.advance() >>> 16)\n  public advance = () => {\n    this.count++\n    return (this.seed = advanceLcg(this.seed)) >>> 0\n  }\n  public back = () => {\n    this.count--\n    return (this.seed = backLcg(this.seed)) >>> 0\n  }\n\n  private static conCache: LCGConstantCache | undefined\n  public static createCache = () => {\n    if (!LCG.conCache) return\n\n    const a: number[] = Array(32)\n    const b: number[] = Array(32)\n    a[0] = 0x41c64e6d\n    b[0] = 0x6073\n\n    for (let i = 0; i < 32; i++) {\n      a[i] = Math.imul(a[i - 1], a[i - 1])\n      b[i] = Math.imul(b[i - 1], a[i - 1] + 1)\n    }\n\n    const mulCache: number[][] = [Array(256), Array(256), Array(256), Array(256)]\n    const addCache: number[][] = [Array(256), Array(256), Array(256), Array(256)]\n\n    for (let i = 0; i < 4; i++) {\n      const t = i << 3\n\n      mulCache[i][0] = 1\n      addCache[i][0] = 0\n      mulCache[i][1] = a[t]\n      addCache[i][1] = b[t]\n      for (let k = 2; k < 256; k++) {\n        mulCache[i][k] = Math.imul(mulCache[i][k - 1], a[t])\n        addCache[i][k] = (Math.imul(addCache[i][k - 1], a[t]) + b[t]) & 0xffffffff\n      }\n    }\n\n    LCG.conCache = {\n      mulCache,\n      addCache,\n    }\n  }\n}\n\nexport const advanceDaily = (seed: number): number => lcg_next(seed, 0x6c078965, 0x1)\nexport const backDaily = (seed: number): number => lcg_next(seed, 0x9638806d, 0x69c77f93)\nexport class DailyLCG {\n  constructor(private seed: number) {\n    this.count = 0\n  }\n\n  private count: number\n  public getCount = () => this.count >>> 0\n  public getSeed = () => this.seed >>> 0\n  public advance = () => {\n    this.count++\n    return (this.seed = advanceDaily(this.seed)) >>> 0\n  }\n  public back = () => {\n    this.count--\n    return (this.seed = backDaily(this.seed)) >>> 0\n  }\n}\n","import { lcg_next } from '@src/rng/LCG/lcg'\n\nexport const generateLotteryNumber = (seed: number): number => lcg_next(seed >>> 0, 0x41c64e6d, 0x3039) >>> 16\n","type Outbreak = {\n  mapName: string\n  pokemon: string\n}\n\nexport const dpOutbreaks: readonly Outbreak[] = [\n  { mapName: '201ばんどうろ', pokemon: 'ドードー' },\n  { mapName: '202ばんどうろ', pokemon: 'ジグザグマ' },\n  { mapName: '203ばんどうろ', pokemon: 'カラカラ' },\n  { mapName: '206ばんどうろ', pokemon: 'ノズパス' },\n  { mapName: '207ばんどうろ', pokemon: 'ゴマゾウ' },\n  { mapName: '208ばんどうろ', pokemon: 'ノコッチ' },\n  { mapName: '209ばんどうろ', pokemon: 'ブルー' },\n  { mapName: '213ばんどうろ', pokemon: 'アブソル' },\n  { mapName: '214ばんどうろ', pokemon: 'バネブー' },\n  { mapName: '215ばんどうろ', pokemon: 'スリープ' },\n  { mapName: '216ばんどうろ', pokemon: 'デリバード' },\n  { mapName: '217ばんどうろ', pokemon: 'ウリムー' },\n  { mapName: '218ばんどうろ', pokemon: 'ビリリダマ' },\n  { mapName: '221ばんどうろ', pokemon: 'カモネギ' },\n  { mapName: '222ばんどうろ', pokemon: 'エネコ' },\n  { mapName: '224ばんどうろ', pokemon: 'ネイティ' },\n  { mapName: '225ばんどうろ', pokemon: 'マクノシタ' },\n  { mapName: '226ばんすいどう', pokemon: 'クラブ' },\n  { mapName: '227ばんどうろ', pokemon: 'パッチール' },\n  { mapName: '228ばんどうろ', pokemon: 'ダンバル' },\n  { mapName: '229ばんどうろ', pokemon: 'ポッポ' },\n  { mapName: '230ばんすいどう', pokemon: 'サニーゴ' },\n  { mapName: 'たにまのはつでんしょ', pokemon: 'ラクライ' },\n  { mapName: 'タタラせいてつじょ', pokemon: 'コイル' },\n  { mapName: 'ハクタイのもり', pokemon: 'ナマケロ' },\n  { mapName: 'シンジこ', pokemon: 'アメタマ' },\n  { mapName: 'リッシこ', pokemon: 'ベロリンガ' },\n  { mapName: 'エイチこ', pokemon: 'ムチュール' },\n]\n\nexport const ptOutbreaks: readonly Outbreak[] = [\n  { mapName: '201ばんどうろ', pokemon: 'ドードー' },\n  { mapName: '202ばんどうろ', pokemon: 'ジグザグマ' },\n  { mapName: '203ばんどうろ', pokemon: 'カラカラ' },\n  { mapName: '206ばんどうろ', pokemon: 'ヨーギラス' },\n  { mapName: '207ばんどうろ', pokemon: 'ゴマゾウ' },\n  { mapName: '208ばんどうろ', pokemon: 'ノコッチ' },\n  { mapName: '209ばんどうろ', pokemon: 'ブルー' },\n  { mapName: '214ばんどうろ', pokemon: 'バネブー' },\n  { mapName: '215ばんどうろ', pokemon: 'スリープ' },\n  { mapName: '217ばんどうろ', pokemon: 'デリバード' },\n  { mapName: '218ばんどうろ', pokemon: 'ビリリダマ' },\n  { mapName: '221ばんどうろ', pokemon: 'カモネギ' },\n  { mapName: '222ばんどうろ', pokemon: 'エネコ' },\n  { mapName: '224ばんどうろ', pokemon: 'ネイティ' },\n  { mapName: '225ばんどうろ', pokemon: 'マクノシタ' },\n  { mapName: '226ばんすいどう', pokemon: 'クラブ' },\n  { mapName: '227ばんどうろ', pokemon: 'パッチール' },\n  { mapName: '228ばんどうろ', pokemon: 'ダンバル' },\n  { mapName: '229ばんどうろ', pokemon: 'カイロス' },\n  { mapName: '230ばんすいどう', pokemon: 'サニーゴ' },\n  { mapName: 'たにまのはつでんしょ', pokemon: 'ラクライ' },\n  { mapName: 'ハクタイのもり', pokemon: 'ナマケロ' },\n]\n\nexport const generateOutbreak = (seed: number, table: readonly Outbreak[]): Outbreak => {\n  return table[(seed >>> 0) % table.length]\n}\n","import { lcg_next } from '@src/rng/LCG/lcg'\n\nconst g_inv = (x: number) => lcg_next(x, 0xeeb9eb65, 0xfc77a683)\nconst h = (x: number) => lcg_next(x, 0x6c078965, 0xca55f729)\n\nexport const findDailySeed = (lottery1: number, lottery2: number): number[] => {\n  const result = [] as number[]\n  for (let lower = 0; lower < 0x10000; lower++) {\n    const val = h((lottery1 << 16) | lower) >>> 16\n\n    if (val === lottery2) result.push(g_inv((lottery1 << 16) | lower))\n  }\n  return result\n}\n","import React from 'react'\nimport { InputProps } from '@chakra-ui/input'\n\nconst filterInput = (value: string): string => {\n  const ret = value.replace(/[０-９]/g, (_) => String.fromCharCode(_.charCodeAt(0) - 0xfee0)).replace(/\\D/g, '')\n\n  return ret === '0' ? ret : ret.replace(/^0+/, '')\n}\n\ntype useIntegerInputReturn = Pick<InputProps, 'onChange' | 'onBlur' | 'onCompositionStart' | 'onCompositionEnd'> & {\n  value: string\n  getValue: () => number\n}\nexport const useIntegerInput = (defaultValue: string): useIntegerInputReturn => {\n  const [composing, setComposing] = React.useState<boolean>(false)\n  const [value, setValue] = React.useState<string>(filterInput(defaultValue))\n\n  const onChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setValue(composing ? e.target.value : filterInput(e.target.value)),\n    [composing]\n  )\n  const onBlur = React.useCallback(() => {\n    if (value === '') setValue('0')\n  }, [value])\n  const onCompositionStart = React.useCallback(() => setComposing(true), [])\n  const onCompositionEnd = React.useCallback(() => {\n    setComposing(false)\n    setValue(filterInput(value))\n  }, [value])\n  const getValue = React.useCallback(() => parseInt(value), [value])\n\n  return {\n    value,\n    onChange,\n    onBlur,\n    onCompositionStart,\n    onCompositionEnd,\n    getValue,\n  }\n}\n","import React from 'react'\nimport { Flex, Box, Button, Input, Table, Thead, Th, Tr, Tbody, Td, useToast } from '@chakra-ui/react'\n\nimport { generateLotteryNumber, findDailySeed } from './util'\nimport { advanceDaily } from '@src/rng/LCG/lcg'\nimport { useIntegerInput } from '@src/hooks/useIntegerInput'\n\nconst toHex = (v: number) => (v >>> 0).toString(16)\nconst validate = (n: number) => {\n  if (Number.isNaN(n) || !Number.isFinite(n)) return false\n  if (!Number.isInteger(n)) return false\n  return 0 <= n && n < 0x10000\n}\nconst get3rdLottery = (seed: number) => generateLotteryNumber(advanceDaily(advanceDaily(seed >>> 0)))\n\nexport const DailySeedFinder: React.FC = () => {\n  const toast = useToast()\n  const { getValue: getValue1, ...prop1 } = useIntegerInput('65005')\n  const { getValue: getValue2, ...prop2 } = useIntegerInput('14314')\n  const [result, setResult] = React.useState<number[]>([])\n  const handleCalc = React.useCallback(() => {\n    const v1 = getValue1()\n    const v2 = getValue2()\n    if (!validate(v1) || !validate(v2)) {\n      toast({\n        description: 'あほしね',\n        status: 'error',\n        duration: 900,\n      })\n    } else {\n      setResult(findDailySeed(v1, v2))\n    }\n  }, [getValue1, getValue2, toast])\n\n  return (\n    <Box>\n      <Box marginBottom=\"30px\">日替わりseed検索</Box>\n      <Flex alignItems=\"center\" marginBottom=\"10px\">\n        <Box marginRight=\"10px\">1日目</Box>\n        <Input rounded=\"sm\" w=\"150px\" {...prop1} />\n      </Flex>\n      <Flex alignItems=\"center\" marginBottom=\"30px\">\n        <Box marginRight=\"10px\">2日目</Box>\n        <Input rounded=\"sm\" w=\"150px\" {...prop2} />\n      </Flex>\n      <Button\n        marginBottom=\"10px\"\n        variant=\"ghost\"\n        w=\"150px\"\n        border=\"1px\"\n        borderColor=\"gray.300\"\n        rounded=\"sm\"\n        onClick={handleCalc}\n      >\n        計算\n      </Button>\n      {result.length > 0 && (\n        <Table size=\"sm\">\n          <Thead>\n            <Tr>\n              <Th w=\"25%\"></Th>\n              <Th w=\"25%\">seed</Th>\n              <Th w=\"25%\">3日目</Th>\n              <Th w=\"25%\"></Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {result.map((val, i) => {\n              return (\n                <Tr key={i}>\n                  <Td userSelect=\"none\">候補{i}</Td>\n                  <Td>{toHex(val)}</Td>\n                  <Td>{get3rdLottery(val)}</Td>\n                  <Td>\n                    <Button\n                      variant=\"ghost\"\n                      border=\"1px\"\n                      borderColor=\"gray.300\"\n                      rounded=\"sm\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(toHex(val))\n                        toast({\n                          description: 'コピーしました',\n                          status: 'success',\n                          duration: 900,\n                        })\n                      }}\n                    >\n                      seedをコピー\n                    </Button>\n                  </Td>\n                </Tr>\n              )\n            })}\n          </Tbody>\n        </Table>\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Table, Thead, Th, Tr, Tbody, Td, BoxProps } from '@chakra-ui/react'\nimport type { DailyResult } from './define'\n\ntype ResultTableRowProps = DailyResult &\n  Pick<BoxProps, 'bg'> & { i: number; onClick: (i: number, points: readonly number[]) => void }\nconst ResultTableRow: React.FC<ResultTableRowProps> = React.memo(\n  ({ i, bg, seed, lottery, mapName, pokemon, points, onClick }) => {\n    const handleClick = React.useCallback(() => {\n      onClick(i, points)\n    }, [onClick, points, i])\n\n    return (\n      <Tr cursor=\"pointer\" onClick={handleClick} bg={bg}>\n        <Td userSelect=\"none\">{i + 1}日目</Td>\n        <Td>{seed}</Td>\n        <Td>{lottery}</Td>\n        <Td>{mapName}</Td>\n        <Td>{pokemon}</Td>\n      </Tr>\n    )\n  }\n)\n\ntype ResultTypeProps = {\n  result?: readonly DailyResult[]\n  selectedRowIndex?: number\n  onClickRow: (i: number, points: readonly number[]) => void\n}\nexport const ResultTable: React.FC<ResultTypeProps> = React.memo(({ result, selectedRowIndex, onClickRow }) => {\n  return (\n    <Table size=\"sm\">\n      <Thead>\n        <Tr>\n          <Th></Th>\n          <Th>seed</Th>\n          <Th>くじ番号</Th>\n          <Th>大量発生マップ</Th>\n          <Th>大量発生ポケモン</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {result &&\n          result.map((val, i) => (\n            <ResultTableRow\n              key={val.seed}\n              i={i}\n              onClick={onClickRow}\n              {...result[i]}\n              bg={i === selectedRowIndex ? 'gray.200' : 'transparent'}\n            />\n          ))}\n      </Tbody>\n    </Table>\n  )\n})\n","export const validateSeed = (input: string): boolean => {\n  return 0 < input.length && input.length <= 8 && !/[^0-9A-Fa-f]/g.test(input)\n}\n","export const toHex = (seed: number): string => (seed >>> 0).toString(16)\n","import { TileType } from './Tile'\n\nexport const coronetB1FMap = [\n  '##....*.............',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~x~~',\n  '##~~~x~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~~~~~~~~~~~~~',\n  '##~~~~~~x~~~~~~~~~~~',\n  '*.~~~~~~~~~~~~~~~~~~',\n  '..~~~~~~~~#######~~~',\n  '..~~~~~~~~#######~~~',\n  '..~~~~~~~~#######~~~',\n  '..~~##~~~~#######~~~',\n  '..~~##~~~~#######~~~',\n  '*.~~~~~~~~#######~~~',\n  '..~~~~~~~~#######~~~',\n  '..~~~~~~~~~~~~..~~~~',\n  '..~~~~~~~~~~~~..~~~~',\n  '..~~~~~~~~~~~~~~~~~~',\n  '..~~~~~~~~~~~~~~~~~~',\n  '..~~~~~~~~~~~~~###~~',\n  '..~~~~~~~~~~~~~###~~',\n  '..~~~~~~~~~~~~~###~~',\n  '..~~~~~~~~~~~~~~~~~~',\n  '..~~~~~~~~~~x~~~~~~~',\n  '*.~~~###~~~~~~~~~~~~',\n  '..~~~###~~~~~~~~~~~~',\n  '..~~~###~~~~~~##~~~~',\n  '..~~~~~~~~~~~~##~~~~',\n  '..~~x~~~~~~~~~~~~~~~',\n  '..~~~~~~~~~~~~~~~~~~',\n  'x.~~~~~~~~~~~~~~~~~~',\n].map((it) => it.split('') as readonly TileType[])\n","import React from 'react'\nimport { BoxProps, Flex } from '@chakra-ui/react'\n\nexport type TileProps = Pick<BoxProps, 'bg'>\nexport const Tile: React.FC<TileProps> = ({ bg, children }) => (\n  <Flex\n    h=\"20px\"\n    w=\"20px\"\n    border=\"1px\"\n    borderColor=\"gray.200\"\n    bg={bg}\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    userSelect=\"none\"\n  >\n    {children}\n  </Flex>\n)\n\nconst whiteRock = {\n  bg: 'white',\n}\nconst bigRock = {\n  bg: 'black',\n}\nconst smashRock = {\n  bg: '#6B493D',\n}\nconst ground = {\n  bg: '#C5956B',\n}\nconst water = {\n  bg: 'blue.200',\n}\n\nexport type TileType = '#' | '*' | 'x' | '.' | '~'\nexport const propMap: { [key in TileType]: TileProps } = {\n  '#': bigRock,\n  '*': smashRock,\n  x: whiteRock,\n  '.': ground,\n  '~': water,\n}\n","import React from 'react'\nimport { Flex } from '@chakra-ui/react'\n\nimport { coronetB1FMap } from './MapData'\nimport { Tile, TileType, propMap } from './Tile'\n\nconst TileRow: React.FC<{\n  h: number\n  line: readonly TileType[]\n  feebasIndexes: readonly number[]\n}> = ({ h, line, feebasIndexes }) => (\n  <Flex>\n    {line.map((c, i) => (\n      <Tile key={i} {...propMap[c]}>\n        {h >= 0 && i > 1 && feebasIndexes.includes(h * 18 + i - 2) && '@'}\n      </Tile>\n    ))}\n  </Flex>\n)\n\nexport const MtCoronetB1F: React.FC<{\n  feebasIndexes?: readonly number[]\n}> = React.memo(({ feebasIndexes }) => {\n  return (\n    <>\n      {coronetB1FMap.map((it, i) => (\n        <TileRow key={i} line={it} h={i - 1} feebasIndexes={feebasIndexes || []} />\n      ))}\n    </>\n  )\n})\n","import React from 'react'\nimport { Button, ButtonProps } from '@chakra-ui/react'\n\nexport const StyledButton: React.FC<ButtonProps> = ({ children, ...props }) => {\n  return (\n    <Button variant=\"ghost\" border=\"1px\" borderColor=\"gray.300\" rounded=\"sm\" userSelect=\"none\" {...props}>\n      {children}\n    </Button>\n  )\n}\n","import React from 'react'\nimport { Flex, Box, Input, useToast, HStack, BoxProps } from '@chakra-ui/react'\n\nimport type { DailyResult } from './define'\nimport { ResultTable } from './DailyRNGList'\n\nimport { toHex, validateSeed } from '@src/util'\nimport { advanceDaily } from '@src/rng/LCG/lcg'\nimport { generateLotteryNumber, generateOutbreak, generateTileIndexes, dpOutbreaks, ptOutbreaks } from '../util'\nimport { MtCoronetB1F } from './MtCoronetB1FMap'\nimport { StyledButton } from '@src/components/StyledButton'\n\nconst SelectedBox: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Flex\n      h=\"40px\"\n      w=\"100px\"\n      fontWeight=\"bold\"\n      border=\"1px\"\n      color=\"white\"\n      bg=\"gray.500\"\n      rounded=\"sm\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      userSelect=\"none\"\n      {...props}\n    >\n      {children}\n    </Flex>\n  )\n}\n\nexport const DailyRNGListPage: React.FC = () => {\n  const toast = useToast()\n\n  const inputEl = React.useRef<HTMLInputElement>(null)\n  const [result, setResult] = React.useState<readonly DailyResult[] | undefined>(undefined)\n  const [version, setVersion] = React.useState<'dp' | 'pt'>('dp')\n  const [selectedRow, setSelectedRow] = React.useState<number | undefined>(undefined)\n  const [selectedPoints, setSelectedPoints] = React.useState<readonly number[]>([])\n\n  const handleSetDp = React.useCallback(() => setVersion('dp'), [])\n  const handleSetPt = React.useCallback(() => setVersion('pt'), [])\n  const handleCalc = React.useCallback(() => {\n    if (!inputEl?.current) return\n\n    const seedInput = inputEl.current.value\n\n    if (!validateSeed(seedInput)) {\n      toast({\n        description: 'あほしね',\n        status: 'error',\n        duration: 900,\n      })\n      return\n    }\n\n    const res = [] as DailyResult[]\n    let seed = parseInt(seedInput, 16)\n    for (let i = 0; i < 20; i++, seed = advanceDaily(seed)) {\n      res.push({\n        seed: toHex(seed),\n        lottery: generateLotteryNumber(seed >>> 0),\n        ...generateOutbreak(seed >>> 0, version === 'dp' ? dpOutbreaks : ptOutbreaks),\n        points: generateTileIndexes(seed >>> 0),\n      })\n    }\n    setResult(res)\n    setSelectedRow(undefined)\n    setSelectedPoints([])\n  }, [inputEl, toast, version])\n  const handleClickResult = React.useCallback((i: number, points: readonly number[]) => {\n    setSelectedRow(i)\n    setSelectedPoints(points)\n  }, [])\n\n  return (\n    <Box>\n      <Box marginBottom=\"30px\">日替わりseedリスト</Box>\n      <Flex w=\"60%\" alignItems=\"center\" marginBottom=\"10px\">\n        <Box marginRight=\"10px\">seed</Box>\n        <Input ref={inputEl} rounded=\"sm\" w=\"150px\" defaultValue=\"8fe39a4b\" />\n      </Flex>\n      <HStack marginBottom=\"10px\">\n        {version === 'dp' ? (\n          <SelectedBox>ダイパ</SelectedBox>\n        ) : (\n          <StyledButton w=\"100px\" onClick={handleSetDp}>\n            ダイパ\n          </StyledButton>\n        )}\n        {version === 'pt' ? (\n          <SelectedBox>プラチナ</SelectedBox>\n        ) : (\n          <StyledButton w=\"100px\" onClick={handleSetPt}>\n            プラチナ\n          </StyledButton>\n        )}\n      </HStack>\n      <StyledButton marginBottom=\"10px\" w=\"150px\" onClick={handleCalc}>\n        計算\n      </StyledButton>\n      <Flex flexWrap=\"wrap\">\n        <Box w=\"60%\" paddingX=\"10px\">\n          <ResultTable result={result} selectedRowIndex={selectedRow} onClickRow={handleClickResult} />\n        </Box>\n        <Box>\n          <MtCoronetB1F feebasIndexes={selectedPoints} />\n        </Box>\n      </Flex>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Flex, Box, Button, HStack } from '@chakra-ui/react'\n\nimport { DailySeedFinder } from './DailySeedFinder'\nimport { DailyRNGListPage } from './DailyRNGList'\n\nexport const DailyRNGPage: React.FC = () => {\n  const [tab, setTab] = React.useState<'DailySeedFinder' | 'DailySeedList'>('DailySeedFinder')\n  const handleSetFinderTab = React.useCallback(() => setTab('DailySeedFinder'), [])\n  const handleSetListTab = React.useCallback(() => setTab('DailySeedList'), [])\n\n  return (\n    <Box maxW=\"1000px\" margin=\"0 auto\" marginBottom=\"50px\">\n      <Flex justifyContent=\"left\" marginBottom=\"30px\">\n        <HStack>\n          <Button variant=\"link\" onClick={handleSetFinderTab}>\n            検索\n          </Button>\n          <Button variant=\"link\" onClick={handleSetListTab}>\n            リスト\n          </Button>\n        </HStack>\n      </Flex>\n      {tab === 'DailySeedFinder' && <DailySeedFinder />}\n      {tab === 'DailySeedList' && <DailyRNGListPage />}\n    </Box>\n  )\n}\n","import type { InnerClock } from './define'\n\nconst SEC_PER_DAY = 86400\nconst DAYS_PER_LOOP = 36525\n\nconst daysOfMonth: readonly number[] = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nconst totalDays: readonly number[] = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]\n\nconst getDays = ({ year, month, date }: Pick<InnerClock, 'year' | 'month' | 'date'>) => {\n  const y = month < 3 ? year - 1 : year\n  const m = month < 3 ? month + 12 : month\n\n  const dy = y * 365 + ((y + 4) >>> 2)\n  const dm = (m * 979 - 1033) >>> 5\n\n  return dy + dm + date - 1\n}\n\nconst days2Date = (days: number): Pick<InnerClock, 'year' | 'month' | 'date'> => {\n  days %= DAYS_PER_LOOP\n\n  // 2000年が閏年なので、1997年起算にして閏年を必ず4年目になるようにずらす.\n  // 1095 = 365*3\n  days += 1095\n\n  // 4年をひと塊と見なす.\n  const y4 = Math.floor(days / 1461)\n  days -= y4 * 1461\n\n  // 4年未満の日数を変換していく.\n  // ぴったり1460日だと閏年の影響があってめんどくさいので例外処理.\n  if (days == 1460) return { year: y4 * 4, month: 12, date: 31 }\n\n  // y = 0~3\n  const y = Math.floor(days / 365)\n  const year = y + y4 * 4 - 3 // 加算した3年分を引く.\n  days -= y * 365\n\n  // 閏年の2/29. めんどくさいので例外処理.\n  if (y == 3 && days == 59) return { year, month: 2, date: 29 }\n\n  // 1月\n  if (days < 31) return { year, month: 1, date: days + 1 }\n\n  // 2月\n  if (days < 59) return { year, month: 2, date: days - 30 }\n  else {\n    if (y == 3) days--\n\n    const m_temp = Math.floor(days / 31) // だいたい何月か目星をつける.\n    const d_temp = days - totalDays[m_temp] // m_temp月の何日か\n    const month = m_temp + 1\n    const day = d_temp + 1\n\n    // ひと月多く見積もってしまっていた.\n    if (d_temp < 1) return { year, month: month - 1, date: day + totalDays[m_temp - 1] }\n\n    // ひと月少なく見積もってしまっていた.\n    if (d_temp >= daysOfMonth[m_temp]) return { year, month: month + 1, date: day - daysOfMonth[m_temp] }\n\n    return { year, month, date: day }\n  }\n}\n\nexport const getPrevClock = ({ second, minute, hour, ...date }: InnerClock, frames: number): InnerClock => {\n  let backSec = Math.floor((frames * 10000) / 598261)\n  if (frames != Math.floor((backSec * 598261 + 9999) / 10000)) backSec++ // ぴったりじゃなかったら秒の境界を超える.\n\n  let backDays = Math.floor(backSec / SEC_PER_DAY)\n  backSec -= backDays * SEC_PER_DAY\n\n  // 現在時刻を秒に直す.\n  let sec = second + minute * 60 + hour * 3600 - backSec\n\n  // 日付を跨いだ\n  if (sec < 0) {\n    backDays++\n    sec += SEC_PER_DAY\n  }\n\n  let min = Math.floor(sec / 60)\n  sec -= min * 60\n  const ho = Math.floor(min / 60)\n  min -= ho * 60\n\n  let days = getDays(date) - backDays\n  if (days < 0) days += DAYS_PER_LOOP\n\n  return { ...days2Date(days), hour: ho, minute: min, second: sec }\n}\nexport const getNextClock = ({ second, minute, hour, ...date }: InnerClock, frames: number): InnerClock => {\n  let advSec = Math.floor((frames * 10000) / 598261)\n  if (frames != Math.floor((advSec * 598261 + 9999) / 10000)) advSec++ // ぴったりじゃなかったら秒の境界を超える.\n\n  let advDays = Math.floor(advSec / SEC_PER_DAY)\n  advSec -= advDays * SEC_PER_DAY\n\n  // 現在時刻を秒に直す.\n  let sec = second + minute * 60 + hour * 3600 - advSec\n\n  // 日付を跨いだ\n  if (sec >= SEC_PER_DAY) {\n    advDays++\n    sec -= SEC_PER_DAY\n  }\n\n  let min = Math.floor(sec / 60)\n  sec -= min * 60\n  const ho = Math.floor(min / 60)\n  min -= ho * 60\n\n  let days = getDays(date) + advDays\n  if (days >= DAYS_PER_LOOP) days -= DAYS_PER_LOOP\n\n  return { ...days2Date(days), hour: ho, minute: min, second: sec }\n}\n","import { InitialSeedFactors } from './define'\nimport { getPrevClock } from '../InnerClock/innerClock'\n\ntype DetectDateTimeArgs = {\n  seed: number\n  blank: number\n  second: number\n  extendsFrame?: boolean\n}\nexport const detectDateTime: (args: DetectDateTimeArgs) => InitialSeedFactors = ({\n  seed,\n  blank,\n  second,\n  extendsFrame = false,\n}) => {\n  let h8 = seed >>> 24\n  let u24 = seed & 0xffffff\n\n  let hour = u24 > 0x170000 ? 23 : u24 >> 16\n  u24 -= hour << 16\n  let frame = blank + u24\n  if (frame < 0x10000 && extendsFrame) {\n    // 時から借りてこれるときは借りてくる.\n    if (hour != 0) {\n      hour--\n      frame += 0x10000\n    }\n    // 借りてこれないときはもっと上から借りてくる.\n    else {\n      if (h8 == 0) h8 = 0xff\n      else h8--\n      frame += 0x1000000\n    }\n  }\n\n  const d_sec = Math.floor(frame / 59.8261)\n\n  const year = frame - Math.floor((d_sec * 598261 + 9999) / 10000)\n  frame -= year\n\n  h8 = (h8 - ((second + d_sec) % 60)) & 0xff\n\n  // h8 == 0のときだけ例外処理.\n  const month = h8 == 0 ? 12 : h8 < 10 ? 1 : 10\n  const date = h8 == 0 ? 21 : Math.floor(h8 / month)\n\n  const minute = h8 == 0 ? 4 : h8 - month * date\n\n  const start = getPrevClock({ year, month, date, hour, minute, second: (second + d_sec) % 60 }, frame)\n\n  return { innerClock: start, waitFrames: frame, blankFrames: blank }\n}\n","import React from 'react'\n\nimport { Flex, Box, Button, Input, useToast, Menu, MenuButton, MenuItem, MenuList, BoxProps } from '@chakra-ui/react'\nimport { detectDateTime } from './InitialSeedFactors/detectDateTime'\nimport { validateSeed } from '@src/util'\nimport { InitialSeedFactors } from './InitialSeedFactors/define'\nimport { StyledButton } from '@src/components/StyledButton'\n\nconst toPadStr = (n: number): string => `${n}`.padStart(2, '0')\nconst DateTimeResult: React.FC<BoxProps & { result: InitialSeedFactors }> = ({ result, ...props }) => {\n  const date = React.useMemo(() => {\n    const { year, month, date } = result.innerClock\n    return `${year + 2000}年${toPadStr(month)}月${toPadStr(date)}日`\n  }, [result.innerClock])\n  const time = React.useMemo(() => {\n    const { hour, minute, second } = result.innerClock\n    return `${toPadStr(hour)}時${toPadStr(minute)}分${toPadStr(second)}秒`\n  }, [result.innerClock])\n  const wait = React.useMemo(\n    () => `${result.waitFrames}F (${Math.round(result.waitFrames / 59.8261)}秒) 待機`,\n    [result.waitFrames]\n  )\n\n  return (\n    <Box {...props}>\n      <Box>{`${date} ${time} 起動`}</Box>\n      <Box>{wait}</Box>\n    </Box>\n  )\n}\n\n// TODO\n// - 結果表示の整形\n// - でざいんととのえ\n// - 入力のvalidate\nexport const CalcDateTimePage: React.FC = () => {\n  const toast = useToast()\n\n  const [seed, setSeed] = React.useState('AC120FB2')\n  const handleChangeSeed = React.useCallback((e: React.ChangeEvent<HTMLInputElement>) => setSeed(e.target.value), [])\n  const [blank, setBlank] = React.useState(345)\n  const handleChangeBlank = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => setBlank(e.target.valueAsNumber),\n    []\n  )\n  const [result, setResult] = React.useState<InitialSeedFactors | null>(null)\n  const handleCalc = React.useCallback(() => {\n    if (!validateSeed(seed) || !Number.isInteger(blank)) {\n      toast({\n        description: 'あほしね',\n        status: 'error',\n      })\n      return\n    }\n    const res = detectDateTime({\n      seed: parseInt(seed, 16),\n      blank,\n      second: 10,\n    })\n    setResult(res)\n  }, [seed, blank, toast])\n\n  return (\n    <Box maxW=\"1000px\" margin=\"0 auto\" marginBottom=\"50px\">\n      <Flex w=\"60%\" alignItems=\"center\" marginBottom=\"10px\">\n        <Box marginRight=\"10px\">seed</Box>\n        <Input rounded=\"sm\" w=\"150px\" value={seed} onChange={handleChangeSeed} />\n      </Flex>\n      <Flex w=\"60%\" alignItems=\"center\" marginBottom=\"10px\">\n        <Box marginRight=\"10px\">空白時間</Box>\n        <Input type=\"number\" min=\"100\" max=\"999\" rounded=\"sm\" w=\"150px\" value={blank} onChange={handleChangeBlank} />\n        <Menu>\n          <MenuButton\n            as={Button}\n            variant=\"ghost\"\n            border=\"1px\"\n            borderColor=\"gray.300\"\n            rounded=\"sm\"\n            userSelect=\"none\"\n            marginLeft=\"10px\"\n          >\n            プリセット\n          </MenuButton>\n          <MenuList>\n            <MenuItem onClick={() => setBlank(221)}>ダイパ</MenuItem>\n            <MenuItem onClick={() => setBlank(249)}>プラチナ</MenuItem>\n            <MenuItem onClick={() => setBlank(345)}>HGSS</MenuItem>\n            <MenuItem onClick={() => setBlank(212)}>ダイパ ID調整</MenuItem>\n            <MenuItem onClick={() => setBlank(332)}>プラチナ ID調整</MenuItem>\n            <MenuItem onClick={() => setBlank(184)}>HGSS ID調整</MenuItem>\n          </MenuList>\n        </Menu>\n      </Flex>\n      <StyledButton onClick={handleCalc}>計算</StyledButton>\n      {result && (\n        <>\n          <DateTimeResult result={result} marginTop=\"20px\" fontSize=\"32px\" color=\"black\" />\n          <Box color=\"gray.400\" marginTop=\"20px\">\n            <b>HGSS</b>の<b>ID調整</b>の場合、表示された時刻の<b>3分前</b>の時刻を設定してください。\n            <br />\n            これはHGSSのID決定の処理が実際に実行されるのが、最後にAボタンを押してから約3秒後であるためです。\n            <br />\n            そのうちツール側で対応するようにします。\n          </Box>\n        </>\n      )}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const Top: React.FC = () => {\n  return (\n    <>\n      よおこそ\n      <ul>\n        <li>\n          <Link to=\"/daily\">日替わり乱数</Link>\n        </li>\n        <li>\n          <Link to=\"/initial-seed\">起動時刻計算</Link>\n        </li>\n      </ul>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Box, Flex, keyframes } from '@chakra-ui/react'\nimport { Link } from 'react-router-dom'\n\nconst neon = keyframes`\n0%{color:#ff0053;}\n12%{color:#ff5353;}\n24%{color:#ffcf53;}\n36%{color:#e8ff53;}\n48%{color:#53ff5d;}\n60%{color:#53ffbc;}\n72%{color:#5393ff;}\n84%{color:#ca53ff;}\n100%{color:#ff53bd;}\n`\nconst gaming = keyframes`\n  100% { background-position-x: 200%; }\n`\n\nexport const Header: React.FC = () => {\n  return (\n    <Flex\n      h=\"80px\"\n      w=\"100%\"\n      bg=\"linear-gradient(to right, Magenta, yellow, Cyan, Magenta) 0% center/200%\"\n      animation={`${gaming} 2s linear infinite`}\n      paddingLeft=\"30px\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      marginBottom=\"30px\"\n    >\n      <Box fontSize=\"36px\" fontWeight=\"bold\" animation={`${neon} 2s linear infinite`}>\n        <Link to=\"/\">Pokemon RNG Tools</Link>\n      </Box>\n    </Flex>\n  )\n}\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\n\nexport const PageContainer: React.FC = ({ children }) => {\n  return (\n    <Box maxW=\"1000px\" margin=\"0 auto\" marginBottom=\"50px\">\n      {children}\n    </Box>\n  )\n}\n","import React from 'react'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nimport { DailyRNGPage } from './pages/Gen4DailyRNG'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport { CalcDateTimePage } from './pages/Gen4InitialSeed/CalcDateTimePage'\nimport { Top } from './pages/Top'\nimport { Header } from './components/Header'\nimport { PageContainer } from './components/PageContainer'\n\nexport const App: React.FC = () => {\n  return (\n    <ChakraProvider>\n      <BrowserRouter>\n        <PageContainer>\n          <Header />\n          <Switch>\n            <Route path=\"/daily\">\n              <DailyRNGPage />\n            </Route>\n            <Route path=\"/initial-seed\">\n              <CalcDateTimePage />\n            </Route>\n            <Route>\n              <Top />\n            </Route>\n          </Switch>\n        </PageContainer>\n      </BrowserRouter>\n    </ChakraProvider>\n  )\n}\n","import ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}